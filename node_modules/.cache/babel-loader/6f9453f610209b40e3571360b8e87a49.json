{"ast":null,"code":"var _jsxFileName = \"/Users/tony/Desktop/aiplayground/src/FaceLandMark.js\";\nimport React, { useEffect, useRef, Component } from 'react';\nimport * as tf from '@tensorflow/tfjs';\nimport * as facemesh from '@tensorflow-models/face-landmarks-detection';\nimport Webcam from 'react-webcam';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FaceLandMark extends Component {\n  render() {\n    var _s = $RefreshSig$();\n\n    function startMachine() {\n      _s();\n\n      var webcamRef = useRef(null);\n      var canvaseRef = useRef(null);\n\n      const runFacemesh = async () => {\n        const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\n        setInterval(() => {\n          detect(net);\n        }, 100);\n      };\n\n      const detect = async net => {\n        if (typeof webcamRef.current !== 'undefined' && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n          // get Video properties\n          const video = webcamRef.current.video;\n          const videoWidth = webcamRef.current.video.videoWidth;\n          const videoheight = webcamRef.current.video.videoHeight; // Set video width and height\n\n          webcamRef.current.video.width = videoWidth;\n          webcamRef.current.video.height = videoheight; // Set canvas width and height\n\n          canvaseRef.current.width = videoWidth;\n          canvaseRef.current.height = videoheight; //Make detections\n\n          const face = await net.estimateFaces({\n            input: video\n          }); //console.log(face);\n          //Get canvas context\n\n          const ctx = canvaseRef.current.getContext('2d'); //requestAnimationFrame(()=>{drawMesh(face,ctx)});\n        }\n      }; //Load facemesh \n\n\n      useEffect(() => {\n        runFacemesh();\n      }, []);\n    }\n\n    _s(startMachine, \"mkrq7ruYYxFQZ/gqeyooZy3lQeQ=\");\n\n    startMachine();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to Face Landmark Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: 'absolute',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          left: 0,\n          right: 0,\n          textAlign: 'center',\n          zIndex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvaseRef,\n        style: {\n          position: 'absolute',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          left: 0,\n          right: 0,\n          textAlign: 'center',\n          zIndex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default FaceLandMark;","map":{"version":3,"sources":["/Users/tony/Desktop/aiplayground/src/FaceLandMark.js"],"names":["React","useEffect","useRef","Component","tf","facemesh","Webcam","FaceLandMark","render","startMachine","webcamRef","canvaseRef","runFacemesh","net","load","SupportedPackages","mediapipeFacemesh","setInterval","detect","current","video","readyState","videoWidth","videoheight","videoHeight","width","height","face","estimateFaces","input","ctx","getContext","position","marginLeft","marginRight","left","right","textAlign","zIndex"],"mappings":"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","sourcesContent":["import React , { useEffect, useRef, Component } from 'react';\nimport * as tf  from '@tensorflow/tfjs';\nimport * as facemesh from '@tensorflow-models/face-landmarks-detection';\nimport Webcam from 'react-webcam';\n\n\nclass FaceLandMark extends Component{\n\n    \n    \n    render(){\n        function startMachine(){\n            \n            var webcamRef = useRef(null);\n            var canvaseRef = useRef(null);\n\n\n     const runFacemesh = async () =>  {\n     const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\n     setInterval(()=>{\n       detect(net);\n       },100);\n     };\n  \n     const detect = async(net) => {\n       if (\n        typeof webcamRef.current !== 'undefined' &&\n        webcamRef.current !== null &&\n        webcamRef.current.video.readyState === 4\n        ){\n        // get Video properties\n        const video = webcamRef.current.video;\n        const videoWidth = webcamRef.current.video.videoWidth;\n        const videoheight = webcamRef.current.video.videoHeight;\n\n        // Set video width and height\n        webcamRef.current.video.width=videoWidth;\n        webcamRef.current.video.height=videoheight;\n\n        // Set canvas width and height\n        \n        canvaseRef.current.width=videoWidth;\n        canvaseRef.current.height=videoheight;\n\n        //Make detections\n\n        const face = await net.estimateFaces({input:video});\n        //console.log(face);\n\n        //Get canvas context\n        const ctx = canvaseRef.current.getContext('2d');\n        //requestAnimationFrame(()=>{drawMesh(face,ctx)});\n\n      }\n  }\n\n  //Load facemesh \n  \n  useEffect(()=>{runFacemesh()},[])\n        }\n        startMachine()\n        return(\n        <div>\n            <h2>Welcome to Face Landmark Detection</h2>\n            <Webcam\n           ref = {webcamRef}\n           style = {{\n           position:'absolute',\n           marginLeft:'auto',\n           marginRight:'auto',\n           left: 0,\n           right: 0,\n           textAlign: 'center',\n           zIndex: 9,\n           width: 640,\n           height: 480,\n         }}\n        />\n        <canvas\n        ref = {canvaseRef}\n        style = {{\n          position:'absolute',\n          marginLeft:'auto',\n          marginRight:'auto',\n          left: 0,\n          right: 0,\n          textAlign: 'center',\n          zIndex: 9,\n          width: 640,\n          height: 480,\n        }} \n        />\n        </div>\n         \n        );\n    }\n}\n\nexport default FaceLandMark;"]},"metadata":{},"sourceType":"module"}