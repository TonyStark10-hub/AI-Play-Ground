{"ast":null,"code":"var _jsxFileName = \"/Users/tony/Desktop/aiplayground/src/FaceLandMark.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, Component } from 'react';\nimport * as tf from '@tensorflow/tfjs';\nimport * as facemesh from '@tensorflow-models/face-landmarks-detection';\nimport Webcam from 'react-webcam';\nimport { drawMesh } from './fmutilities.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FaceLandMark() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const webcamRef = useRef(null);\n  const canvaseRef = useRef(null);\n\n  const runFacemesh = async () => {\n    const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  const detect = async net => {\n    if (typeof webcamRef.current !== 'undefined' && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // get Video properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoheight = webcamRef.current.video.videoHeight; // Set video width and height\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoheight; // Set canvas width and height\n\n      canvaseRef.current.width = videoWidth;\n      canvaseRef.current.height = videoheight; //Make detections\n\n      const face = await net.estimateFaces({\n        input: video\n      }); //console.log(face);\n      //Get canvas context\n\n      const ctx = canvaseRef.current.getContext('2d');\n      requestAnimationFrame(() => {\n        drawMesh(face, ctx);\n      });\n    }\n  }; //Load facemesh \n\n\n  document.addEventListener('DOMContentLoaded', _s(() => {\n    _s();\n\n    useEffect(() => {\n      runFacemesh();\n    }, []);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Face Landmark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: 'absolute',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          left: 0,\n          right: 0,\n          textAlign: 'center',\n          zIndex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvaseRef,\n        style: {\n          position: 'absolute',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          left: 0,\n          right: 0,\n          textAlign: 'center',\n          zIndex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(FaceLandMark, \"3YuK5IjdIoedJMCQoTPbRyb3PFE=\");\n\n_c = FaceLandMark;\nexport default FaceLandMark;\n\nvar _c;\n\n$RefreshReg$(_c, \"FaceLandMark\");","map":{"version":3,"sources":["/Users/tony/Desktop/aiplayground/src/FaceLandMark.js"],"names":["React","useEffect","useRef","Component","tf","facemesh","Webcam","drawMesh","FaceLandMark","webcamRef","canvaseRef","runFacemesh","net","load","SupportedPackages","mediapipeFacemesh","setInterval","detect","current","video","readyState","videoWidth","videoheight","videoHeight","width","height","face","estimateFaces","input","ctx","getContext","requestAnimationFrame","document","addEventListener","position","marginLeft","marginRight","left","right","textAlign","zIndex"],"mappings":"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","sourcesContent":["import React , { useEffect, useRef, Component } from 'react';\nimport * as tf  from '@tensorflow/tfjs';\nimport * as facemesh from '@tensorflow-models/face-landmarks-detection';\nimport Webcam from 'react-webcam';\nimport {drawMesh} from './fmutilities.js'\n\nfunction FaceLandMark() {\n    const webcamRef = useRef(null);\n    const canvaseRef = useRef(null);\n  \n  \n    const runFacemesh = async () =>  {\n      const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\n      setInterval(()=>{\n        detect(net);\n      },100);\n    };\n    \n    const detect = async(net) => {\n      if (\n        typeof webcamRef.current !== 'undefined' &&\n        webcamRef.current !== null &&\n        webcamRef.current.video.readyState === 4\n        ){\n          // get Video properties\n          const video = webcamRef.current.video;\n          const videoWidth = webcamRef.current.video.videoWidth;\n          const videoheight = webcamRef.current.video.videoHeight;\n  \n          // Set video width and height\n          webcamRef.current.video.width=videoWidth;\n          webcamRef.current.video.height=videoheight;\n  \n          // Set canvas width and height\n          \n          canvaseRef.current.width=videoWidth;\n          canvaseRef.current.height=videoheight;\n  \n          //Make detections\n  \n          const face = await net.estimateFaces({input:video});\n          //console.log(face);\n  \n          //Get canvas context\n          \n            const ctx = canvaseRef.current.getContext('2d');\n            requestAnimationFrame(()=>{drawMesh(face,ctx)});\n              \n          \n  \n        }\n    }\n  \n    //Load facemesh \n    document.addEventListener('DOMContentLoaded',()=>{\n    useEffect(()=>{runFacemesh()},[]) \n    })  \n    return (\n      <div className=\"App\" >\n        <h1> Face Landmark</h1>\n        <header className=\"App-header\">\n          <Webcam\n           ref = {webcamRef}\n           style = {{\n             position:'absolute',\n             marginLeft:'auto',\n             marginRight:'auto',\n             left: 0,\n             right: 0,\n             textAlign: 'center',\n             zIndex: 9,\n             width: 640,\n             height: 480,\n           }}\n          />\n          <canvas\n          ref = {canvaseRef}\n          style = {{\n            position:'absolute',\n            marginLeft:'auto',\n            marginRight:'auto',\n            left: 0,\n            right: 0,\n            textAlign: 'center',\n            zIndex: 9,\n            width: 640,\n            height: 480,\n          }} \n          />\n        </header>\n      </div>\n    );\n  }\n  \n  export default FaceLandMark;"]},"metadata":{},"sourceType":"module"}